language: java
jdk:
  - openjdk8

before_install:
  - chmod +x gradlew

branches:
  only:
    - master

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"

before_deploy:
  - zip -r Spring-boot-for-web-service *
  - mkdir -p deploy
  - mv Spring-boot-for-web-service.zip deploy/Spring-boot-for-web-service.zip

#before_deploy:
#  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
#  - cp scripts/*.sh before-deploy/
#  - cp appspec.yml before-deploy/
#  - cp build/libs/*.jar before-deploy/
#  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동후 전체 압축
#  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
#  - mv before-deploy/before-deploy.zip deploy/Spring-boot-for-web-service.zip # deploy로 zip파일 이동

deploy:
  - provider: s3
    #travis repo에 설정된값
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY

    bucket: springboot-bucket-build # s3버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip파일 접근을 private로
    local_dir: deploy
    wait-until-deployed: true

#  - provider: codedeploy
#    on:
#      all_branches: true
#    access_key_id: $AWS_ACCESS_KEY
#    secret_access_key: $AWS_SECRET_KEY
#
#    bucket: springboot-bucket-build # s3버킷
#    key: Spring-boot-for-web-service.zip
#    bundle_type: zip
#    application: Spring-boot-for-web-service
#    deployment_group: Spring-boot-for-web-service-group
#    region:  ap-northeast-2
#    wait-until-deployed: true

    # CI 실행 완료; 메일로 알람
    notifications:
      email:
        recipients:
          - merong245@gmail.com